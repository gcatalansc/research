#pragma once
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
/*
Nombre Clase : 	  ENVIRONMENT (Clase para renderizar gráficos).
Fecha	     :	  16:26 pm 12-06-2017.
Diseñador    :	  Gustavo Catalán Ulloa.
*/
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//librerias.---------------------------------------------------------------------------
#include <iostream>
#include <windows.h>
#include <thread>
#include <string>
#include <cmath>
#include <SFML/System.hpp>
#include <SFML/Graphics.hpp>
#include <SFML/Window.hpp>
using namespace std;
using namespace sf;

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//tipos.
typedef		void		vo;
typedef		int			in;
typedef		float		flo;
typedef		double		dou;

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//constantes de estados de banderas.
#define		ON			1													
#define		OFF			0

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
class ENVIRONMENT
{
//elementos públicos.
public:

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//declaraciones de parámetros.
	in					x;																	//resolución en X.
	in					y;																	//resolución en Y.
	in					test_node_group_amount;												//cantidad de grupos de nodos.
	in					test_node_amount;													//cantidad de nodos por grupo.	

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//condiciones de ejecución.
	in					update_render_flag;													//banadera para actualizar render.
	in					exit_flag;															//bandera para salir.

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//colores.
	Color				*color;																//vector de colores.
	Color				color_aux[8];														//vector de colores auxiliar.
	in					color_counter;														//contador de colores.

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//declaraciones de renderizado textos string.
	string				titulovS;															//titulo ventana string.

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//declaraciones de renderizado background.
	RenderWindow		*rV;																//ventana de renderización.
	RectangleShape		*backgroundP;														//background padre de renderización.
	
	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//declaraciones de figuras para nodos.
	CircleShape			*base_nodes;														//figuras base para renderizar nodos.
	CircleShape			**test_nodes;														//figura para renderizar nodos.

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//declaraciones de figuras de texto para renderizado números sobre nodos de prueba.
	Font				text_font;															//font usados en los números.
	Text				**nodes_number;														//números textos.

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//declaración de thread.
	thread				threadtEventos;														//thread de eventos.
	thread				threadUpdateRender;												    //thread del render.

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//declaración del tiempo de espera de bucles.
	in					twait;								

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//constructor 1.
	ENVIRONMENT();

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//constructor 2.
	ENVIRONMENT(in		_alto,
			    in		_ancho,
			    string	_tituloVentana,	
				in		_test_node_group_amount,
			    in		_test_node_amount);

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//destructor.
	~ENVIRONMENT(void);

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método para seteo de inicialización.
	vo iniENVIRONMENT(in		_alto,
					  in		_ancho,
					  string	_tituloVentana,	
					  in		_test_node_group_amount,
					  in		_test_node_amount);

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método de entrada de datos de las posiciones de los nodos.
	void NodePositionInput(dou _new_positions_base_nodes[2][2], dou ***_new_positions_test_nodes);

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método para mostrar render.
	void ShowRender(void);

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método thread para controlar eventos.
	void ThreadEventos(void);	

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método thread para actualizar renderización de nodos.
	void ThreadUpdateRenderNodes(void);
	
	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método Get para obtener la bandera 'update_render_flag'.
	in GetUpdate_render_flag(void);

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método Get para obtener la bandera 'exit_flag'.
	in GetExit_flag(void);

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método Set para setear la bandera 'update_render_flag'.
	void SetUpdate_render_flag(in _status);

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método Set para setear la bandera 'exit_flag'.
	void SetExit_flag(in _status);

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//método para hacer casting de dou a string.
	string CastNumsGridFaS(dou _numeroF);

};

