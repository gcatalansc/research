//------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------
/*
Nombre Clase : 	  ACIS_VS (Estructura de información de acción tipo 'VS').
Fecha	     :	  14:51 pm 13-06-2017.
Diseñador    :	  Gustavo Catalán Ulloa.
descripción	 :	  XXXXXXXXXXXX.
*/
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//librerias.
#include "ACIS_VS.h"

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//espacio de nombres.
using namespace UPC;

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: constructor.
ACIS_VS::ACIS_VS()
{
	//---------------------------------------------------------------------------------
	//inicialización del registro de la estructura.
	this->AC_RG		= "x";

	//---------------------------------------------------------------------------------
	//inicialización de registro y sub-registros.
	this->CS_SRG	= -1;																	//estado de congruencia.
	this->AL_SRG	= -1;																	//nivel de actividad.
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#2: destructor.
ACIS_VS::~ACIS_VS()
{
	//---------------------------------------------------------------------------------
	//limpieza de buffer.
	this->Clean();
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: método para crear estructura.
vo ACIS_VS::Create(st _ac_rg, dou _al_srg)
{
	//---------------------------------------------------------------------------------
	//seteo de registro.
	this->AC_RG		= _ac_rg;																//registro de acción.

	//---------------------------------------------------------------------------------
	//seteo de sub-registros.	
	this->CS_SRG	= OFF;																	//estado de congruencia.
	this->AL_SRG	= _al_srg;																//nivel de actividad.
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: método para crear una relación a la estructura.
vo ACIS_VS::CreateRelation(in _rl_type, in _rl_id, in _upci_type, in _upci_id)
{
	//--------------------------------------------------------------------------------
	//seteo de uana relación a la estructura.
	this->RL.push_back(deque<in>(0));
	this->RL.back().push_back(_rl_type);
	this->RL.back().push_back(_rl_id);
	this->RL.back().push_back(_upci_type);
	this->RL.back().push_back(_upci_id);
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#2: método para eliminar una relación a la estructura.
vo ACIS_VS::DeleteRelation(in _index)
{
	//---------------------------------------------------------------------------------
	//eliminación de la relación en _index.
	this->RL.erase(RL.begin() + _index);
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: método para diferenciar estructura.
 dou ACIS_VS::Differentiate(st *_ac_rg)
{
	//-------------------------------------------------------------------------
    //variables auxiliares.
    dou  congruence				= 0;                                                //nivel de congruencia.
    in   iteration_length		= 0;                                                //largo de la diferenciación.
    in   dif_length				= 0;                                                //diferencia entre el largo del registro local y externo.
         
    //-------------------------------------------------------------------------
    //obtención de la diferencia del largo de los registros.
	dif_length = abs(in(this->AC_RG.length() - _ac_rg->length()));

    //-------------------------------------------------------------------------
    //obtención del largo de la iteración.
    if      (this->AC_RG.length() <= _ac_rg->length())	iteration_length = this->AC_RG.length();
    else if (this->AC_RG.length()  > _ac_rg->length())	iteration_length = _ac_rg->length();

    //-------------------------------------------------------------------------
	//-------------------------------------------------------------------------
    //bucle para diferenciar estructura.
    for (in i1 = 0; i1 < iteration_length; i1++)
    {
		//---------------------------------------------------------------------
        //diferenciación.
        if (this->AC_RG.at(i1) == _ac_rg->at(i1)) ++congruence;
    }

    //-------------------------------------------------------------------------
    //cálculo del nivel de proximidad.
    congruence = (congruence * 100) / (iteration_length + dif_length);
	
	//-------------------------------------------------------------------------
    //retorno del nivel de proximidad.
    return congruence;
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: método para obtener la cantidad de relaciones.
in ACIS_VS::GetRelationAmount()
{
	//---------------------------------------------------------------------------------
	//obtención de la cantidad de relaciones.
	return in(this->RL.size());
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#2: método para obtener índice de una relación.
in ACIS_VS::GetRelationIndex(in _rl_type, in _rl_id, in _upci_type, in _upci_id)
{
	//---------------------------------------------------------------------------------
	//cantidad de relaciones.
	in rl_amount = this->GetRelationAmount();

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//bucle para hallar la relación.
	for (in i1 = 0; i1 < rl_amount; i1++)
	{
		//-----------------------------------------------------------------------------
		//si se halla la relación, entonces retornar el índice de la relación.
		if (_rl_type == abs(this->RL.at(i1).at(0)) && _rl_id == this->RL.at(i1).at(1) && _upci_type == this->RL.at(i1).at(2) && _upci_id == this->RL.at(i1).at(3))	return i1;
	}

	//---------------------------------------------------------------------------------
	//retorno si no se ha hallado la relación.
	return -1;
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#3: método especial para obtener índice de la siguiente relación entrante.
in ACIS_VS::GetNextInputRelationS(in _rl_start_index)
{
	//---------------------------------------------------------------------------------
	//obtención de la cantidad de relaciones.
	in rl_amount = this->GetRelationAmount();

	//---------------------------------------------------------------------------------
	//bucle para obtener el índice de la siguiente relación entrante.
	for (in i1 = _rl_start_index + 1; i1 < rl_amount; i1++)
	{
		//-----------------------------------------------------------------------------
		//si la relación es entrante, entonces.
		if (this->RL.at(i1).at(0) < 0)
		{
			//-------------------------------------------------------------------------
			//retorno del índice de la relación entrante.
			return  i1;
		}
	}

	//---------------------------------------------------------------------------------
	//retorno si no se ha hallado la relación.
	return -1;
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#4: método especial para obtener índice de la siguiente relación saliente.
in ACIS_VS::GetNextOutputRelationS(in _rl_start_index)
{
	//---------------------------------------------------------------------------------
	//obtención de la cantidad de relaciones.
	in rl_amount = this->GetRelationAmount();

	//---------------------------------------------------------------------------------
	//bucle para obtener el índice de la siguiente relación saliente.
	for (in i1 = _rl_start_index + 1; i1 < rl_amount; i1++)
	{
		//-----------------------------------------------------------------------------
		//si la relación es saliente, entonces.
		if (this->RL.at(i1).at(0) > 0)
		{
			//-------------------------------------------------------------------------
			//retorno del índice de la relación saliente.
			return  i1;
		}
	}

	//---------------------------------------------------------------------------------
	//retorno si no se ha hallado la relación.
	return -1;
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#5: método para obtener índice de la anterior relación entrante.
in ACIS_VS::GetPreviousInputRelationS(in _rl_start_index)
{
	//---------------------------------------------------------------------------------
	//bucle para obtener el índice de la anterior relación entrante.
	for (in i1 = _rl_start_index - 1; i1 >= 0; i1--)
	{
		//-----------------------------------------------------------------------------
		//si la relación es entrante, entonces.
		if (this->RL.at(i1).at(0) < 0)
		{
			//-------------------------------------------------------------------------
			//retorno del índice de la relación entrante.
			return  i1;
		}
	}

	//---------------------------------------------------------------------------------
	//retorno si no se ha hallado la relación.
	return -1;
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#6: método para obtener índice de la anterior relación saliente.
in ACIS_VS::GetPreviousOutputRelationS(in _rl_start_index)
{
	//---------------------------------------------------------------------------------
	//bucle para obtener el índice de la anterior relación saliente.
	for (in i1 = _rl_start_index - 1; i1 >= 0; i1--)
	{
		//-----------------------------------------------------------------------------
		//si la relación es saliente, entonces.
		if (this->RL.at(i1).at(0) > 0)
		{
			//-------------------------------------------------------------------------
			//retorno del índice de la relación saliente.
			return  i1;
		}
	}

	//---------------------------------------------------------------------------------
	//retorno si no se ha hallado la relación.
	return -1;
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: método para setear la estructura.
vo ACIS_VS::Set(st _ac_rg, in _cs_srg, dou _al_srg, dedein _rl)
{
	//---------------------------------------------------------------------------------
	//seteo de registro.
	this->AC_RG		= _ac_rg;																//registro de acción.

	//---------------------------------------------------------------------------------
	//seteo de sub-registros.
	this->CS_SRG	= _cs_srg;																//estado de congruencia.
	this->AL_SRG	= _al_srg;																//nivel de actividad.

	//---------------------------------------------------------------------------------
	//seteo de relaciones.
	this->RL		= _rl;	
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1. método para Clean la estructura.
vo ACIS_VS::Clean()
{
	//---------------------------------------------------------------------------------
	//reSeteo del registro de la estructura.
	this->AC_RG		= "x";

	//---------------------------------------------------------------------------------
	//reset de sub-registros.	
	this->CS_SRG	= -1;																	//estado de congruencia.	
	this->AL_SRG	= -1;																	//nivel de actividad.
	
	//---------------------------------------------------------------------------------
	//reset de relaciones.
	this->RL.clear();
}