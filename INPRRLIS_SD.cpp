//------------------------------------------------------------------------------------
//------------------------------------------------------------------------------------
/*
Nombre Clase : 	  INPRRLIS_SD (Estructura de información de relación de flujo proporcional de entradas tipo 'SD').
Fecha	     :	  11:50 pm 13-02-2017.
Diseñador    :	  Gustavo Catalán Ulloa.
descripción	 :	  XXXXXXXXXXXX.
*/
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//librerias.
#include "INPRRLIS_SD.h"

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//espacio de nombres.
using namespace UPC;

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: constructor.
INPRRLIS_SD::INPRRLIS_SD()
{
	//---------------------------------------------------------------------------------
	//inicialización de registros.
	this->IN_PRO_RG			= -1;															//proporción entre registros de diferencia de entrada.
	this->STR1_ID_RG		= -1;															//id estructura n°1.
	this->STR2_ID_RG		= -1;															//id estructura n°2.
	this->UPCI_ID_STR1_RG	= -1;															//id upci de estructura n°1.
	this->UPCI_ID_STR2_RG	= -1;															//id upci de estructura n°2.

	//---------------------------------------------------------------------------------
	//inicialización de sub-registros.
	this->CS_SRG			= -1;															//estado de congruencia.
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#2: destructor.
INPRRLIS_SD::~INPRRLIS_SD()
{
	//---------------------------------------------------------------------------------
	//limpieza de buffer.
	this->Clean();
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: método para crear estructura.
vo INPRRLIS_SD::Create(dou &_in_pro_rg, in _str1_id, in _str2_id, in _upci_id_str1, in _upci_id_str2)
{
	//---------------------------------------------------------------------------------
	//inicialización de registros.
	this->IN_PRO_RG			= _in_pro_rg;													//proporción entre registros de diferencia de entrada.
	this->STR1_ID_RG		= _str1_id;														//id estructura n°1.
	this->STR2_ID_RG		= _str2_id;														//id estructura n°2.
	this->UPCI_ID_STR1_RG	= _upci_id_str1;												//id upci de estructura n°1.
	this->UPCI_ID_STR2_RG	= _upci_id_str2;												//id upci de estructura n°2.

	//---------------------------------------------------------------------------------
	//inicialización de sub-registros.
	this->CS_SRG			= OFF;															//estado de congruencia.
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: método para diferenciar estructura.
dou INPRRLIS_SD::Differentiate(dou _in_pro_rg)
{
	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//nivel de congruencia de las estructuras.
	dou congruence = 0;

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//si "_in_pro_rg" es mayor, entonces.
	if (abs(_in_pro_rg) > abs(this->IN_PRO_RG))
	{
		//-----------------------------------------------------------------------------
		//diferenciación de estructuras para obtener congruencia porcentual acumulada.
		congruence += 100.0 - ((abs(_in_pro_rg - this->IN_PRO_RG) / abs(_in_pro_rg)) * 100.0);
	}

	//---------------------------------------------------------------------------------
	//---------------------------------------------------------------------------------
	//si "_in_pro_rg" es menor o igual, entonces.
	else
	{
		//-----------------------------------------------------------------------------
		//diferenciación de estructuras para obtener congruencia porcentual acumulada.
		congruence += 100.0 - ((abs(_in_pro_rg - this->IN_PRO_RG) / abs(this->IN_PRO_RG)) * 100.0);
	}

	//---------------------------------------------------------------------------------
	//retorno del nivel de congruencia.
	return congruence;
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#2: método para setear la estructura.
vo INPRRLIS_SD::Set(dou _in_pro_rg, in _str1_id, in _str2_id, in _upci_id_str1, in _upci_id_str2, in _cs_srg)
{
	//---------------------------------------------------------------------------------
	//seteo de registros.
	this->IN_PRO_RG			= _in_pro_rg;													//proporción entre registros de diferencia de entrada.
	this->STR1_ID_RG		= _str1_id;														//id estructura n°1.
	this->STR2_ID_RG		= _str2_id;														//id estructura n°2.
	this->UPCI_ID_STR1_RG	= _upci_id_str1;												//id upci de estructura n°1.
	this->UPCI_ID_STR2_RG	= _upci_id_str2;												//id upci de estructura n°2.

	//---------------------------------------------------------------------------------
	//seteo de sub-registros.
	this->CS_SRG			= _cs_srg;													//estado de congruencia.
}

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------

//-------------------------------------------------------------------------------------
//-------------------------------------------------------------------------------------
//#1: método para Clean la estructura.
vo INPRRLIS_SD::Clean()
{
	//---------------------------------------------------------------------------------
	//reset de registros.
	this->IN_PRO_RG			= -1;															//proporción entre registros de diferencia de entrada.
	this->STR1_ID_RG		= -1;															//id estructura n°1.
	this->STR2_ID_RG		= -1;															//id estructura n°2.
	this->UPCI_ID_STR1_RG	= -1;															//id upci de estructura n°1.
	this->UPCI_ID_STR2_RG	= -1;															//id upci de estructura n°2.

	//---------------------------------------------------------------------------------
	//reset de sub-registros.
	this->CS_SRG			= -1;															//estado de congruencia.
}
